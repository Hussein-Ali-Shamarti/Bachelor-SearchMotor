{"ast":null,"code":"var _jsxFileName = \"/Users/husseinshamarti/Desktop/Skole/Bachelor-SearchMotorAI/Bachelor-SearchMotor/frontend/src/pages/MyPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport SearchWithResults from \"../components/SearchWithResults\";\nimport Sidebar from \"../components/Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPage = () => {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const [searchQuery, setSearchQuery] = useState(queryParams.get(\"query\") || \"\");\n\n  //TODO: we should probably base this list on a list from the server instead of local changes\n  // Initialize searchHistory from sessionStorage or as an empty array, store to sessionStorage\n  const [searchHistory, setSearchHistory] = useState(() => {\n    const savedHistory = sessionStorage.getItem(\"searchHistory\");\n    return savedHistory ? JSON.parse(savedHistory) : [];\n  });\n\n  // Update sessionStorage whenever searchHistory changes\n  useEffect(() => {\n    sessionStorage.setItem(\"searchHistory\", JSON.stringify(searchHistory));\n  }, [searchHistory]);\n\n  // Function given to SearchWithResults-component to add a search-query to searchHistory\n  const addToSearchHistory = query => {\n    const timestamp = new Date().toISOString().split('T')[0];\n    setSearchHistory(prevSearchHistory => [...prevSearchHistory, {\n      searchQuery: query,\n      timestamp: timestamp\n    }]);\n  };\n  const handleSelectSearchQuery = query => {\n    setSearchQuery(query);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mypage\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      sidebarVisible: \"true\",\n      searchHistory: searchHistory,\n      handleSelectSearchQuery: handleSelectSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"site-content\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchWithResults, {\n        initialQuery: searchQuery,\n        addToSearchHistory: addToSearchHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPage, \"RJPjLNjoF6ESDvJEkFJI0hYzL2c=\", false, function () {\n  return [useLocation];\n});\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","Header","SearchWithResults","Sidebar","jsxDEV","_jsxDEV","MyPage","_s","location","queryParams","URLSearchParams","search","searchQuery","setSearchQuery","get","searchHistory","setSearchHistory","savedHistory","sessionStorage","getItem","JSON","parse","setItem","stringify","addToSearchHistory","query","timestamp","Date","toISOString","split","prevSearchHistory","handleSelectSearchQuery","className","children","sidebarVisible","fileName","_jsxFileName","lineNumber","columnNumber","initialQuery","_c","$RefreshReg$"],"sources":["/Users/husseinshamarti/Desktop/Skole/Bachelor-SearchMotorAI/Bachelor-SearchMotor/frontend/src/pages/MyPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport SearchWithResults from \"../components/SearchWithResults\";\nimport Sidebar from \"../components/Sidebar\";\n\nconst MyPage = () => {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const [searchQuery, setSearchQuery] = useState(queryParams.get(\"query\") || \"\");\n\n\n  //TODO: we should probably base this list on a list from the server instead of local changes\n  // Initialize searchHistory from sessionStorage or as an empty array, store to sessionStorage\n  const [searchHistory, setSearchHistory] = useState(() => {\n    const savedHistory = sessionStorage.getItem(\"searchHistory\");\n    return savedHistory ? JSON.parse(savedHistory) : [];\n  });\n\n  // Update sessionStorage whenever searchHistory changes\n  useEffect(() => {\n    sessionStorage.setItem(\"searchHistory\", JSON.stringify(searchHistory));\n  }, [searchHistory]);\n\n  // Function given to SearchWithResults-component to add a search-query to searchHistory\n  const addToSearchHistory = (query) => {\n    const timestamp = new Date().toISOString().split('T')[0];\n    setSearchHistory((prevSearchHistory) => [...prevSearchHistory, { searchQuery: query, timestamp: timestamp }]);\n  }\n\n  const handleSelectSearchQuery = (query) => {\n    setSearchQuery(query);\n  }\n\n  return (\n    <div className=\"mypage\">\n      <Sidebar sidebarVisible=\"true\" searchHistory={searchHistory} handleSelectSearchQuery={handleSelectSearchQuery} />\n      <main className=\"site-content\">\n        <Header />\n        <SearchWithResults initialQuery={searchQuery} addToSearchHistory={addToSearchHistory} />\n      </main>\n    </div>\n  );\n};\n\nexport default MyPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAACU,WAAW,CAACK,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;;EAG9E;EACA;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,MAAM;IACvD,MAAMkB,YAAY,GAAGC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;IAC5D,OAAOF,YAAY,GAAGG,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC,GAAG,EAAE;EACrD,CAAC,CAAC;;EAEF;EACAnB,SAAS,CAAC,MAAM;IACdoB,cAAc,CAACI,OAAO,CAAC,eAAe,EAAEF,IAAI,CAACG,SAAS,CAACR,aAAa,CAAC,CAAC;EACxE,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMS,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxDb,gBAAgB,CAAEc,iBAAiB,IAAK,CAAC,GAAGA,iBAAiB,EAAE;MAAElB,WAAW,EAAEa,KAAK;MAAEC,SAAS,EAAEA;IAAU,CAAC,CAAC,CAAC;EAC/G,CAAC;EAED,MAAMK,uBAAuB,GAAIN,KAAK,IAAK;IACzCZ,cAAc,CAACY,KAAK,CAAC;EACvB,CAAC;EAED,oBACEpB,OAAA;IAAK2B,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrB5B,OAAA,CAACF,OAAO;MAAC+B,cAAc,EAAC,MAAM;MAACnB,aAAa,EAAEA,aAAc;MAACgB,uBAAuB,EAAEA;IAAwB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjHjC,OAAA;MAAM2B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC5B5B,OAAA,CAACJ,MAAM;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVjC,OAAA,CAACH,iBAAiB;QAACqC,YAAY,EAAE3B,WAAY;QAACY,kBAAkB,EAAEA;MAAmB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC/B,EAAA,CArCID,MAAM;EAAA,QACON,WAAW;AAAA;AAAAwC,EAAA,GADxBlC,MAAM;AAuCZ,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}